services:
  backend:
    build: ./backend
    container_name: customer-health-backend
    ports:
      - "8000:8000"
    restart: always
    # volumes:
    #   - ./backend:/usr/src        # ðŸ‘ˆ mounts local code into container
    #   # - /usr/node_modules     # ðŸ‘ˆ keeps node_modules inside container
    develop:
      watch:
        - path: ./backend
          action: sync
          target: /usr
          ignore:
            - node_modules/

        - action: rebuild
          path: package.json

    environment:
      - DB_USER=postgres
      - DB_PASS=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=customer_health
      - PORT=8000
    depends_on:
      # - seeder
      - db

  frontend:
    build: ./frontend
    container_name: customer-health-frontend
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - backend
    develop:
      watch:
        - path: ./frontend
          action: sync
          target: /usr
          ignore:
            - node_modules/

        - action: rebuild
          path: package.json
    # volumes:
    #   - ./frontend:/usr/src

  db:
    image: postgres:15
    container_name: customer-health-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: customer_health
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
  
  # seeder:
  #   build: ./backend
  #   command: sh -c "npm install && node /backend/db/generateData.js"
  #   volumes:
  #     - ./backend:/usr/db
  #   depends_on:
  #     - db
  #   environment:
  #     - DB_USER=postgres
  #     - DB_PASS=postgres
  #     - DB_HOST=db
  #     - DB_PORT=5432
  #     - DB_NAME=customer_health

volumes:
  db-data:
